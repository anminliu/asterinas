name: Kernel Test
on:
  push:
  pull_request:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container: asterinas/asterinas:0.4.2
    steps:
      - run: echo "Running in asterinas/asterinas:0.4.2"
      - uses: actions/checkout@v4
      
      - name: Check
        id: check
        run: make check
  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      - uses: actions/checkout@v4

      - name: Usermode Unit test
        id: usermode_unit_test
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make test
      - name: Ktest Unit Test
        id: ktest_unit_test
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make ktest
      # TODO: add component check.

  integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - run: echo "Running in asterinas/asterinas:0.4.2"

      - uses: actions/checkout@v4

      - name: Enable KVM
        id: enable_kvm
        run: |
          sudo modprobe kvm
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' \
          | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls -l /dev/kvm
      
      - name: Boot Test (Multiboot)
        id: boot_test_mb
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make run AUTO_TEST=boot ENABLE_KVM=1 BOOT_PROTOCOL=multiboot RELEASE_MODE=1
      - name: Boot Test (Multiboot2)
        id: boot_test_mb2
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make run AUTO_TEST=boot ENABLE_KVM=1 BOOT_PROTOCOL=multiboot2 RELEASE_MODE=1
      - name: Boot Test (MicroVM)
        id: boot_test_microvm
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make run AUTO_TEST=boot ENABLE_KVM=1 QEMU_MACHINE=microvm RELEASE_MODE=1
      - name: Boot Test (Linux Legacy 32-bit Boot Protocol)
        id: boot_test_linux_legacy32
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make run AUTO_TEST=boot ENABLE_KVM=1 BOOT_PROTOCOL=linux-legacy32 RELEASE_MODE=1
      - name: Boot Test (Linux EFI Handover Boot Protocol)
        id: boot_test_linux_efi_handover64
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make run AUTO_TEST=boot ENABLE_KVM=1 BOOT_PROTOCOL=linux-efi-handover64 RELEASE_MODE=1
      - name: Syscall Test (Linux EFI Handover Boot Protocol)
        id: syscall_test
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make run AUTO_TEST=syscall ENABLE_KVM=1 BOOT_PROTOCOL=linux-efi-handover64 RELEASE_MODE=1
      - name: Syscall Test at Ext2 (MicroVM)
        id: syscall_test_at_ext2
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make run AUTO_TEST=syscall SYSCALL_TEST_DIR=/ext2 ENABLE_KVM=1 QEMU_MACHINE=microvm RELEASE_MODE=1
      - name: Syscall Test at Exfat
        id: syscall_test_at_exfat_linux
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make run AUTO_TEST=syscall SYSCALL_TEST_DIR=/exfat EXTRA_BLOCKLISTS_DIRS=blocklists.exfat ENABLE_KVM=1 BOOT_PROTOCOL=linux-efi-handover64 RELEASE_MODE=1
        
      - name: Regression Test (MicroVM)
        id: regression_test_linux
        run: |
          docker run --rm --privileged --network=host --device=/dev/kvm -v ./:/root/asterinas asterinas/asterinas:0.4.2 \
          make run AUTO_TEST=regression ENABLE_KVM=1 QEMU_MACHINE=microvm RELEASE_MODE=1